/*
  File: V Electros Pvt Ltd.example.ino
  Author: Rakesh T S V.Electros Pvt Ltd
  Date: 1/1/2022
  Description:A human following bot is a robotic device that is designed to follow a person around and assist them with tasks or provide companionship.
  These types of devices are often equipped with sensors and algorithms that allow them to detect and track the movement of a person,
  and they may also have features such as voice recognition and natural language processing to allow them to interact with the person they are following.
There are many possible applications for human following bots, including providing assistance to the elderly or disabled, serving as a personal assistant or concierge, and providing companionship to those who live alone. These devices can be made using a variety of technologies, such as microcontrollers, motors, sensors, and artificial intelligence algorithms.
*/


#include <TMRpcm.h>
#include <SD.h>
#include <SPI.h>
TMRpcm audio;
int file_number = 0;
char filePrefixname[50] = "spy";
char exten[10] = ".wav";
const int recordLed = 2;
const int mic_pin = A0;
const int sample_rate = 84000;

#define SD_CSPin 4
// delay function for with serial log.

void wait_min(int mins) {
  int count = 0;
  int secs = mins * 60;
  while (1) {
    Serial.print('.');
    delay(1000);
    count++;
    if (count == secs) {
      count = 0;
      break;
    }
  }
  Serial.println();
  return ;
}
void setup() {
  // put your setup code here, to run once:
  //initialises the serial connection between the arduino and any connected serial device(e.g. computer, phone, raspberry pi...)
  Serial.begin(9600);
  //Sets up the pins
  pinMode(mic_pin, INPUT);
  pinMode(recordLed, OUTPUT);
  Serial.println("loading... SD card");
  if (!SD.begin(SD_CSPin)) {
    Serial.println("An Error has occurred while mounting SD");
  }
  while (!SD.begin(SD_CSPin)) {
    Serial.print(".");
    delay(500);
  }
  audio.CSPin = SD_CSPin;
}
void loop() {
  Serial.println("####################################################################################");
  char fileSlNum[20] = "";
  itoa(file_number, fileSlNum, 10);
  char file_name[50] = "";
  strcat(file_name, filePrefixname);
  strcat(file_name, fileSlNum);
  strcat(file_name, exten);
  Serial.print("New File Name: ");
  Serial.println(file_name);
  digitalWrite(recordLed, HIGH);
  audio.startRecording(file_name, sample_rate, mic_pin);
  Serial.println("startRecording ");
  // record audio for 2mins. means , in this loop process record 2mins of audio.
  // if you need more time duration recording audio then
  // pass higher value into the wait_min(int mins) function.
  wait_min(1);
  digitalWrite(recordLed, LOW);
  audio.stopRecording(file_name);
  Serial.println("stopRecording");
  file_number++;
  Serial.println("####################################################################################");
}

#include<Servo.h>
#include<AFMotor.h>
#define   LEFT A0
#define echopin A1 // echo pin
#define trigpin A2 // Trigger pin
#define   RIGHT A3

AF_DCMotor Motor1(1,MOTOR12_1KHZ);
AF_DCMotor Motor2(2,MOTOR12_1KHZ);
AF_DCMotor   Motor3(3,MOTOR34_1KHZ);
AF_DCMotor Motor4(4,MOTOR34_1KHZ);

Servo myservo;
   
int pos =0;
long time;

void setup(){

Serial.begin(9600);
myservo.attach(10);

for(pos   = 90; pos <= 180; pos += 1){
myservo.write(pos);
delay(15);
}
 
for(pos   = 180; pos >= 0; pos-= 1) {
myservo.write(pos);
delay(15);
}

for(pos   = 0; pos<=90; pos += 1) {
myservo.write(pos);
delay(15);
}

pinMode(RIGHT,   INPUT);
pinMode(LEFT, INPUT);

pinMode(trigpin, OUTPUT);
pinMode(echopin,   INPUT);

}

void loop(){
unsigned int distance = read_cm();

int   Right_Value = digitalRead(RIGHT);
int Left_Value  = digitalRead(LEFT);

Serial.print("R=   ");
Serial.print(Right_Value);
Serial.print(" L= ");
Serial.print(Left_Value);
Serial.print("   D= ");
Serial.println(distance);

     if((Right_Value==1) && (distance>=10   && distance<=30)&&(Left_Value==1)){forword();}
else if((Right_Value==0) && (Left_Value==1)){turnRight();}
else   if((Right_Value==1) && (Left_Value==0)){turnLeft();}
else if((Right_Value==1)   && (Left_Value==1)){stop();}
else if(distance > 5 && distance < 10){stop();}
else   if(distance < 5){backword();}

delay(50);
}

long read_cm(){
   digitalWrite(trigpin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigpin,   HIGH);
  delayMicroseconds(10);
  time = pulseIn (echopin, HIGH);
  return   time / 29 / 2;
}

void forword(){// turn it on going forward
Motor1.setSpeed(120);
Motor1.run(FORWARD);
Motor2.setSpeed(120);
Motor2.run(FORWARD);
Motor3.setSpeed(120);
Motor3.run(FORWARD);
Motor4.setSpeed(120);
Motor4.run(FORWARD);
}

void   backword(){ // the other way
Motor1.setSpeed(120);
Motor1.run(BACKWARD); 
Motor2.setSpeed(120);
Motor2.run(BACKWARD);
Motor3.setSpeed(120);
Motor3.run(BACKWARD);   
Motor4.setSpeed(120);
Motor4.run(BACKWARD); 
}

void turnRight(){   // the other right
Motor1.setSpeed(200);
Motor1.run(FORWARD);
Motor2.setSpeed(200);
Motor2.run(FORWARD);
Motor3.setSpeed(100);
Motor3.run(BACKWARD);
Motor4.setSpeed(100);
Motor4.run(BACKWARD);
}

void   turnLeft(){ // turn it on going left
Motor1.setSpeed(100);
Motor1.run(BACKWARD);
Motor2.setSpeed(100);
Motor2.run(BACKWARD);
Motor3.setSpeed(200);
Motor3.run(FORWARD);
Motor4.setSpeed(200);
Motor4.run(FORWARD);
}

void   stop(){ // stopped
Motor1.setSpeed(0);  
Motor1.run(RELEASE);
Motor2.setSpeed(0);
Motor2.run(RELEASE);
Motor3.setSpeed(0);
Motor3.run(RELEASE);
Motor4.setSpeed(0);
Motor4.run(RELEASE);   
}
